Option Explicit

Sub ImportLeaptreeData_Debug()
    Dim wbDash As Workbook
    Dim wbQuelle As Workbook
    Dim wsZuweisung As Worksheet
    Dim wsQuelle As Worksheet
    Dim wsZiel As Worksheet
    
    Dim lastRowQuelle As Long
    Dim i As Long
    Dim Suchwert As String, ZielName As String
    Dim rng As Range, c As Range
    Dim vorgSpalte As Long
    Dim nextRow As Long
    
    Dim DebugMode As Boolean
    DebugMode = True ' Bei Bedarf auf False setzen, um Debug-Ausgaben zu deaktivieren
    
    On Error GoTo Handler
    
    If DebugMode Then Debug.Print "Starte ImportLeaptreeData_Debug..."
    
    ' Setze Bezug auf das aktuelle Workbook (Dashboards)
    Set wbDash = ThisWorkbook
    If DebugMode Then Debug.Print "Aktives Workbook: " & wbDash.Name
    
    ' Referenz auf das Zuweisungs-Blatt
    Set wsZuweisung = wbDash.Worksheets("Zuweisung")
    If DebugMode Then Debug.Print "Zuweisungsblatt gefunden: " & wsZuweisung.Name
    
    ' Öffnen der Rohdaten-Arbeitsmappe (falls noch nicht offen)
    ' Pfad anpassen!
    On Error Resume Next
    Set wbQuelle = Workbooks("Leaptree_Data.xlsx")
    On Error GoTo Handler
    
    If wbQuelle Is Nothing Then
        ' Falls die Quelldatei noch nicht geöffnet ist, Pfad anpassen:
        If DebugMode Then Debug.Print "Öffne Leaptree_Data.xlsx..."
        Set wbQuelle = Workbooks.Open("C:\Pfad\zu\Leaptree_Data.xlsx")
    Else
        If DebugMode Then Debug.Print "Leaptree_Data.xlsx ist bereits geöffnet."
    End If
    
    ' Arbeitsblatt mit den Rohdaten in der Quelldatei
    ' Name anpassen, falls nicht "Daten"
    Set wsQuelle = wbQuelle.Worksheets("Daten")
    If DebugMode Then Debug.Print "Quelldaten-Blatt: " & wsQuelle.Name
    
    ' Letzte befüllte Zeile in den Rohdaten ermitteln (Spalte A)
    lastRowQuelle = wsQuelle.Cells(wsQuelle.Rows.Count, "A").End(xlUp).Row
    If DebugMode Then Debug.Print "Letzte befüllte Zeile in den Rohdaten: " & lastRowQuelle
    
    ' Schleife über alle Rohdatenzeilen (angenommen ab Zeile 2, da Zeile 1 Überschriften enthält)
    For i = 2 To lastRowQuelle
        Suchwert = wsQuelle.Cells(i, "A").Value
        
        If DebugMode Then Debug.Print "Zeile " & i & ": Suchwert=" & Suchwert
        
        ' Suche diesen Suchwert im Zuweisungs-Blatt in Spalte A
        Set rng = wsZuweisung.Columns("A").Find(What:=Suchwert, LookIn:=xlValues, LookAt:=xlWhole)
        
        If Not rng Is Nothing Then
            ZielName = rng.Offset(0, 1).Value
            If DebugMode Then Debug.Print "  Zielname für '" & Suchwert & "' gefunden: " & ZielName
            
            ' Versuche, dieses Zielblatt in der Hauptdatei zu referenzieren
            On Error Resume Next
            Set wsZiel = wbDash.Worksheets(ZielName)
            On Error GoTo Handler
            
            If Not wsZiel Is Nothing Then
                If DebugMode Then Debug.Print "  Zielblatt vorhanden: " & wsZiel.Name
                
                ' Suche den Header in Zeile 12
                Set c = wsZiel.Rows(12).Find(What:="Vorgangsnummer", LookIn:=xlValues, LookAt:=xlWhole)
                
                If Not c Is Nothing Then
                    vorgSpalte = c.Column
                    If DebugMode Then Debug.Print "  'Vorgangsnummer' gefunden in Spalte: " & vorgSpalte
                    
                    ' Finde die nächste freie Zeile in dieser Spalte
                    nextRow = wsZiel.Cells(wsZiel.Rows.Count, vorgSpalte).End(xlUp).Row + 1
                    If DebugMode Then Debug.Print "  Nächste freie Zeile in Spalte " & vorgSpalte & ": " & nextRow
                    
                    ' Schreibe die Vorgangsnummer (angenommen in Spalte B der Quelldatei)
                    wsZiel.Cells(nextRow, vorgSpalte).Value = wsQuelle.Cells(i, "B").Value
                    If DebugMode Then Debug.Print "  Vorgangsnummer '" & wsQuelle.Cells(i, "B").Value & "' eingefügt in " & wsZiel.Name & "!"
                    
                Else
                    If DebugMode Then Debug.Print "  Spalte 'Vorgangsnummer' nicht gefunden in Zeile 12 von " & wsZiel.Name
                    ' Ggf. Meldung an den Benutzer
                    'MsgBox "Spalte 'Vorgangsnummer' wurde in Zeile 12 von " & wsZiel.Name & " nicht gefunden!"
                End If
                
            Else
                If DebugMode Then Debug.Print "  Zielblatt '" & ZielName & "' nicht gefunden!"
                'MsgBox "Zielblatt '" & ZielName & "' existiert nicht in der Hauptdatei!"
            End If
        Else
            If DebugMode Then Debug.Print "  Suchwert '" & Suchwert & "' wurde in der Zuweisung nicht gefunden!"
            'MsgBox "Suchwert '" & Suchwert & "' wurde nicht in der Zuweisung gefunden!"
        End If
    Next i
    
    If DebugMode Then Debug.Print "Import fertig!"
    
    ' Wenn gewünscht, die Quelldatei schließen:
    'wbQuelle.Close SaveChanges:=False
    
    Exit Sub

Handler:
    ' Fehlerbehandlung
    Dim ErrMsg As String
    ErrMsg = "Fehler Nr. " & Err.Number & vbCrLf & _
             "Beschreibung: " & Err.Description & vbCrLf & _
             "Modul: " & VBA.Environ("Username") & vbCrLf & _
             "Routine: ImportLeaptreeData_Debug" & vbCrLf & _
             "Zeile: " & Erl
    If DebugMode Then Debug.Print ErrMsg
    MsgBox ErrMsg, vbExclamation, "Fehler aufgetreten"
    
End Sub
