Sub ImportDataFromLeaptree()
    Dim wsRohdaten As Worksheet, wsDashboard As Worksheet, wsZuweisung As Worksheet
    Dim wbRohdaten As Workbook
    Dim lastRowRohdaten As Long, lastRowZuweisung As Long, lastRowDashboard As Long
    Dim dataSheetName As String, key As String, vorgangsnummer As String
    Dim i As Long, j As Long, dashboardRow As Long
    Dim questionColumn As Range, cell As Range
    Dim currentVorgangsnummer As String
    Dim foundRow As Long
    Dim filePath As String

    ' Datei mit Rohdaten öffnen, wenn nicht bereits geöffnet
    filePath = ThisWorkbook.Path & "\Leaptree_Data.xlsx"
    On Error Resume Next
    Set wbRohdaten = Workbooks("Leaptree_Data.xlsx")
    On Error GoTo 0

    If wbRohdaten Is Nothing Then
        If Dir(filePath) = "" Then
            MsgBox "Die Datei 'Leaptree_Data.xlsx' wurde nicht im gleichen Verzeichnis gefunden.", vbExclamation
            Exit Sub
        End If
        Set wbRohdaten = Workbooks.Open(filePath)
    End If

    Set wsRohdaten = wbRohdaten.Worksheets(1)
    Set wsZuweisung = ThisWorkbook.Worksheets("Zuweisung")

    ' Letzte Zeile in den Rohdaten finden
    lastRowRohdaten = wsRohdaten.Cells(wsRohdaten.Rows.Count, "A").End(xlUp).Row
    Debug.Print "Letzte Zeile in den Rohdaten: " & lastRowRohdaten

    ' Letzte Zeile in Zuweisung finden
    lastRowZuweisung = wsZuweisung.Cells(wsZuweisung.Rows.Count, "B").End(xlUp).Row
    Debug.Print "Letzte Zeile in Zuweisung: " & lastRowZuweisung

    ' Dashboard-Daten importieren
    For i = 2 To lastRowRohdaten
        key = Trim(wsRohdaten.Cells(i, "A").Value)
        vorgangsnummer = wsRohdaten.Cells(i, "B").Value
        Debug.Print "Verarbeite Schlüssel: " & key & ", Vorgangsnummer: " & vorgangsnummer

        ' Nur Schlüssel verarbeiten, die in der Zuweisung existieren
        dataSheetName = ""
        For j = 2 To lastRowZuweisung
            If UCase(Trim(wsZuweisung.Cells(j, "B").Value)) = UCase(key) Then
                dataSheetName = Trim(wsZuweisung.Cells(j, "C").Value)
                Debug.Print "Gefundenes Arbeitsblatt: " & dataSheetName
                Exit For
            End If
        Next j

        If dataSheetName = "" Then
            Debug.Print "Kein Arbeitsblatt gefunden für Schlüssel: " & key
            GoTo ContinueLoop
        End If

        ' Arbeitsblatt öffnen
        On Error Resume Next
        Set wsDashboard = ThisWorkbook.Worksheets(dataSheetName)
        On Error GoTo 0

        If wsDashboard Is Nothing Then
            Debug.Print "Arbeitsblatt " & dataSheetName & " nicht gefunden!"
            GoTo ContinueLoop
        End If

        ' Letzte verwendete Zeile im Dashboard
        lastRowDashboard = wsDashboard.Cells(wsDashboard.Rows.Count, "A").End(xlUp).Row
        If lastRowDashboard < 16 Then lastRowDashboard = 16
        Debug.Print "Letzte Zeile im Dashboard (" & dataSheetName & "): " & lastRowDashboard

        ' Prüfen, ob Vorgangsnummer bereits existiert
        foundRow = 0
        For dashboardRow = 16 To lastRowDashboard
            If wsDashboard.Cells(dashboardRow, "A").Value = vorgangsnummer Then
                foundRow = dashboardRow
                Debug.Print "Gefundene Zeile für Vorgangsnummer: " & foundRow
                Exit For
            End If
        Next dashboardRow

        ' Neue Zeile für Vorgangsnummer, wenn nicht vorhanden
        If foundRow = 0 Then
            foundRow = lastRowDashboard + 1
            Debug.Print "Neue Zeile für Vorgangsnummer: " & foundRow
            wsDashboard.Cells(foundRow, "A").Value = vorgangsnummer
            wsDashboard.Cells(foundRow, "B").Value = wsRohdaten.Cells(i, "C").Value
            wsDashboard.Cells(foundRow, "V").Value = wsRohdaten.Cells(i, "D").Value
        End If

        ' Fragen und Antworten zuordnen
        Set questionColumn = wsDashboard.Range("C12:Q12")
        For Each cell In questionColumn
            If cell.Value = wsRohdaten.Cells(i, "J").Value Then
                wsDashboard.Cells(foundRow, cell.Column).Value = wsRohdaten.Cells(i, "L").Value
                Debug.Print "Frage gefunden: " & cell.Value & ", Antwort zugeordnet in Zeile " & foundRow
                Exit For
            End If
        Next cell

ContinueLoop:
    Next i

    Debug.Print "Datenimport abgeschlossen!"
    MsgBox "Daten erfolgreich importiert!"

    ' Rohdaten-Arbeitsmappe schließen
    wbRohdaten.Close SaveChanges:=False
End Sub
