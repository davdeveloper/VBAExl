Sub DatenZuweisung()
    Dim wsRohdaten As Worksheet, wsZuweisung As Worksheet, wsKategorien As Worksheet
    Dim ZielWs As Worksheet
    Dim lastRowRoh As Long, lastRowZuweisung As Long, lastRowKategorien As Long, zielRow As Long
    Dim i As Long, j As Long, k As Long, headerCol As Long
    Dim Schluessel As String, ZielBlattName As String
    Dim Datum As Date, Gestern As Variant
    Dim Kategorie As String, SuchText As String
    Dim Kalenderwoche As String, Wochentag As String
    Dim cell As Range
    Dim MappingWert As String
    Dim OriginalWert As String
    
    ' Variablen für externe Datei
    Dim wbExterne As Workbook
    Dim wsExterne As Worksheet
    Dim lastRowExterne As Long
    Dim DateiPfad As String
    
    ' *** Schutz der Projektmappe aufheben ***
    ThisWorkbook.Unprotect Password:="zary87"
    
    ' Arbeitsblätter zuweisen
    Set wsRohdaten = ThisWorkbook.Worksheets("Rohdaten")
    Set wsZuweisung = ThisWorkbook.Worksheets("Zuweisung")
    Set wsKategorien = ThisWorkbook.Worksheets("Kategorien")
    
    ' Datei-Pfad der externen Datei setzen
    DateiPfad = ThisWorkbook.Path & "\ZuweisungName.xlsx"

    ' Öffnen der externen Datei im Hintergrund
    On Error Resume Next
    Set wbExterne = Workbooks.Open(FileName:=DateiPfad, Password:="zary87", ReadOnly:=True)
    On Error GoTo 0
    
    ' Prüfen, ob die Datei erfolgreich geöffnet wurde
    If wbExterne Is Nothing Then
        MsgBox "Die Datei 'ZuweisungName.xlsx' konnte nicht geöffnet werden.", vbExclamation
        Exit Sub
    End If

    ' Arbeitsblatt in der externen Datei setzen
    Set wsExterne = wbExterne.Sheets(1)
    lastRowExterne = wsExterne.Cells(wsExterne.Rows.Count, "A").End(xlUp).Row
    
    ' Inhalte der externen Datei merken
    Dim DictMapping As Object
    Set DictMapping = CreateObject("Scripting.Dictionary")
    
    ' Spalten A & B aus der externen Datei einlesen
    For i = 2 To lastRowExterne
        DictMapping(wsExterne.Cells(i, "A").Value) = wsExterne.Cells(i, "B").Value
    Next i
    
    ' Externe Datei schließen
    wbExterne.Close False
    Set wbExterne = Nothing

    ' Letzte Zeile in "Rohdaten", "Zuweisung" und "Kategorien" finden
    lastRowRoh = wsRohdaten.Cells(wsRohdaten.Rows.Count, "A").End(xlUp).Row
    lastRowZuweisung = wsZuweisung.Cells(wsZuweisung.Rows.Count, "B").End(xlUp).Row
    lastRowKategorien = wsKategorien.Cells(wsKategorien.Rows.Count, "A").End(xlUp).Row

    ' Durch die Schlüssel in "Zuweisung" iterieren
    For i = 2 To lastRowZuweisung
        Schluessel = wsZuweisung.Cells(i, "B").Value
        ZielBlattName = wsZuweisung.Cells(i, "C").Value

        ' Ziel-Arbeitsblatt prüfen
        On Error Resume Next
        Set ZielWs = ThisWorkbook.Worksheets(ZielBlattName)
        On Error GoTo 0

        If Not ZielWs Is Nothing Then
            ' Daten aus "Rohdaten" finden
            For j = 2 To lastRowRoh
                If wsRohdaten.Cells(j, "A").Value = Schluessel Then
                    ' Kalenderwoche berechnen
                    Datum = wsRohdaten.Cells(j, "F").Value

                    ' Berechne Gestern oder letzten Freitag
                    If Datum <> 0 Then
                        If Weekday(Datum - 1, vbMonday) = 7 Then
                            Gestern = Datum - 3
                        Else
                            Gestern = Datum - 1
                        End If
                    Else
                        Gestern = ""
                    End If

                    ' Kategorie aus "Kategorien" suchen
                    Kategorie = wsRohdaten.Cells(j, "C").Value
                    For k = 2 To lastRowKategorien
                        If wsKategorien.Cells(k, "A").Value = Kategorie Then
                            Kategorie = wsKategorien.Cells(k, "B").Value
                            Exit For
                        End If
                    Next k

                    Kalenderwoche = "KW " & Format(Application.WeekNum(Gestern, vbMonday), "00")

                    ' Namen aus Spalte O extrahieren und Mapping durchführen
                    OriginalWert = wsRohdaten.Cells(j, "O").Value
                    If DictMapping.exists(OriginalWert) Then
                        MappingWert = DictMapping(OriginalWert)
                    Else
                        MappingWert = OriginalWert ' Falls kein Mapping vorhanden, Originalwert beibehalten
                    End If

                    ' Text in Zielarbeitsblatt von C12 bis Q12 durchsuchen und Werte aus Rohdaten holen
                    For headerCol = 3 To 17 ' Spalten C bis Q (3 bis 17)
                        SuchText = "Frage: " & ZielWs.Cells(12, headerCol).Value

                        ' Überschrift in Zeile 1 von "Rohdaten" suchen
                        Dim rohCol As Long
                        rohCol = 0
                        For k = 1 To wsRohdaten.Cells(1, wsRohdaten.Columns.Count).End(xlToLeft).Column
                            If wsRohdaten.Cells(1, k).Value = SuchText Then
                                rohCol = k
                                Exit For
                            End If
                        Next k

                        If rohCol > 0 Then
                            Dim rohWert As String
                            rohWert = wsRohdaten.Cells(j, rohCol).Value

                            ' Überschreiben der Werte
                            Select Case rohWert
                                Case "Ja"
                                    ZielWs.Cells(zielRow, headerCol).Value = "j"
                                Case "Nein"
                                    ZielWs.Cells(zielRow, headerCol).Value = "n"
                                Case "Teilweise"
                                    ZielWs.Cells(zielRow, headerCol).Value = "t"
                                Case "N/A"
                                    ZielWs.Cells(zielRow, headerCol).Value = ""
                                Case Else
                                    ZielWs.Cells(zielRow, headerCol).Value = rohWert
                            End Select
                        End If
                    Next headerCol

                    ' Daten übertragen
                    ZielWs.Cells(zielRow, "A").Value = wsRohdaten.Cells(j, "B").Value ' Vorgangsnummer
                    ZielWs.Cells(zielRow, "B").Value = Kategorie
                    ZielWs.Cells(zielRow, "U").Value = Gestern
                    ZielWs.Cells(zielRow, "V").Value = Format(wsRohdaten.Cells(j, "F").Value, "dd.mm.")
                    ZielWs.Cells(zielRow, "W").Value = wsRohdaten.Cells(j, "G").Value
                    ZielWs.Cells(zielRow, "X").Value = MappingWert
                End If
            Next j
        End If
    Next i

    ' *** Schutz der Projektmappe wieder aktivieren ***
    ThisWorkbook.Protect Password:="zary87"

    Debug.Print "Datenübertragung abgeschlossen!"
    ForwardingImport
End Sub
