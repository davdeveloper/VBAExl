Sub DatenZuweisung()
    Dim wsRohdaten As Worksheet, wsZuweisung As Worksheet, wsKategorien As Worksheet
    Dim ZielWs As Worksheet
    Dim wbZuweisungName As Workbook ' Neue Variable für die externe Arbeitsmappe
    Dim wsZuweisungName As Worksheet ' Arbeitsblatt in der externen Arbeitsmappe
    Dim lastRowRoh As Long, lastRowZuweisung As Long, lastRowKategorien As Long, lastRowZuweisungName As Long, zielRow As Long
    Dim i As Long, j As Long, k As Long, headerCol As Long
    Dim Schluessel As String, ZielBlattName As String
    Dim Datum As Date, Gestern As Variant
    Dim Kategorie As String, SuchText As String
    Dim Kalenderwoche As String, Wochentag As String
    Dim cell As Range
    Dim MappingWert As String
    Dim OriginalWert As String
    Dim filePath As String

    ' Pfad zur Datei "ZuweisungName.xlsx" im gleichen Projektpfad
    filePath = ThisWorkbook.Path & "\ZuweisungName.xlsx"

    ' Externe Arbeitsmappe "ZuweisungName.xlsx" öffnen und entsperren
    On Error Resume Next
    Set wbZuweisungName = Workbooks.Open(filePath, Password:="zary87")
    On Error GoTo 0

    If wbZuweisungName Is Nothing Then
        MsgBox "Die Datei 'ZuweisungName.xlsx' konnte nicht geöffnet werden.", vbExclamation
        Exit Sub
    End If

    ' Arbeitsblatt "ZuweisungName" in der externen Arbeitsmappe zuweisen
    Set wsZuweisungName = wbZuweisungName.Worksheets("ZuweisungName")

    ' Arbeitsblätter in der aktuellen Arbeitsmappe zuweisen
    Set wsRohdaten = ThisWorkbook.Worksheets("Rohdaten")
    Set wsZuweisung = ThisWorkbook.Worksheets("Zuweisung")
    Set wsKategorien = ThisWorkbook.Worksheets("Kategorien")

    ' Letzte Zeile in "Rohdaten", "Zuweisung", "Kategorien" und "ZuweisungName" finden
    lastRowRoh = wsRohdaten.Cells(wsRohdaten.Rows.Count, "A").End(xlUp).Row
    lastRowZuweisung = wsZuweisung.Cells(wsZuweisung.Rows.Count, "B").End(xlUp).Row
    lastRowKategorien = wsKategorien.Cells(wsKategorien.Rows.Count, "A").End(xlUp).Row
    lastRowZuweisungName = wsZuweisungName.Cells(wsZuweisungName.Rows.Count, "A").End(xlUp).Row

    ' Durch die Schlüssel in "Zuweisung" iterieren
    For i = 2 To lastRowZuweisung
        Schluessel = wsZuweisung.Cells(i, "B").Value
        ZielBlattName = wsZuweisung.Cells(i, "C").Value

        ' Ziel-Arbeitsblatt prüfen
        On Error Resume Next
        Set ZielWs = ThisWorkbook.Worksheets(ZielBlattName)
        On Error GoTo 0

        If Not ZielWs Is Nothing Then
            ' Daten aus "Rohdaten" finden
            For j = 2 To lastRowRoh
                If wsRohdaten.Cells(j, "A").Value = Schluessel Then
                    ' Kalenderwoche berechnen
                    Datum = wsRohdaten.Cells(j, "F").Value
                    If Datum <> 0 Then
                        If Weekday(Datum - 1, vbMonday) = 7 Then
                            Gestern = Datum - 3
                        Else
                            Gestern = Datum - 1
                        End If
                    Else
                        Gestern = ""
                    End If

                    ' Kategorie aus "Kategorien" suchen
                    Kategorie = wsRohdaten.Cells(j, "C").Value
                    For k = 2 To lastRowKategorien
                        If wsKategorien.Cells(k, "A").Value = Kategorie Then
                            Kategorie = wsKategorien.Cells(k, "B").Value
                            Exit For
                        End If
                    Next k

                    Kalenderwoche = "KW " & Format(Application.WeekNum(Gestern, vbMonday), "00")

                    ' Namen aus Spalte O extrahieren und in "ZuweisungName" suchen
                    OriginalWert = wsRohdaten.Cells(j, "O").Value
                    MappingWert = OriginalWert ' Standardwert beibehalten
                    For k = 2 To lastRowZuweisungName
                        If wsZuweisungName.Cells(k, "A").Value = OriginalWert Then
                            MappingWert = wsZuweisungName.Cells(k, "B").Value
                            Exit For
                        End If
                    Next k

                    ' Alle Zellen mit der Kalenderwoche in den ersten 900 Zeilen suchen
                    For Each cell In ZielWs.Range("A1:A900")
                        If Trim(cell.Value) = Kalenderwoche Then
                            zielRow = cell.Row + 9

                            ' Wochentag aus der Variable "Gestern" berechnen
                            Wochentag = Format(Gestern, "dddd")

                            ' Suche nach dem Wochentag in Spalte Y ab der gefundenen KW-Zeile
                            Dim foundRow As Long
                            foundRow = 0
                            For k = zielRow To 900
                                If ZielWs.Cells(k, "Y").Value = Wochentag Then
                                    foundRow = k
                                    Exit For
                                End If
                            Next k

                            If foundRow = 0 Then
                                MsgBox "Wochentag nicht gefunden oder kein Platz verfügbar.", vbExclamation
                                Exit Sub
                            End If

                            ' Ab der gefundenen Wochentagszeile die nächste freie Zeile suchen
                            zielRow = foundRow
                            Do While ZielWs.Cells(zielRow, "A").Value <> ""
                                zielRow = zielRow + 1
                            Loop

                            ' Text in Zielarbeitsblatt von C12 bis Q12 durchsuchen und Werte aus Rohdaten holen
                            For headerCol = 3 To 17
                                SuchText = "Frage: " & ZielWs.Cells(12, headerCol).Value

                                ' Überschrift in Zeile 1 von "Rohdaten" suchen
                                Dim rohCol As Long
                                rohCol = 0
                                For k = 1 To wsRohdaten.Cells(1, wsRohdaten.Columns.Count).End(xlToLeft).Column
                                    If wsRohdaten.Cells(1, k).Value = SuchText Then
                                        rohCol = k
                                        Exit For
                                    End If
                                Next k

                                If rohCol > 0 Then
                                    Dim rohWert As String
                                    rohWert = wsRohdaten.Cells(j, rohCol).Value

                                    ' Überschreiben der Werte
                                    Select Case rohWert
                                        Case "Ja"
                                            ZielWs.Cells(zielRow, headerCol).Value = "j"
                                        Case "Nein"
                                            ZielWs.Cells(zielRow, headerCol).Value = "n"
                                        Case "Teilweise"
                                            ZielWs.Cells(zielRow, headerCol).Value = "t"
                                        Case "N/A"
                                            ZielWs.Cells(zielRow, headerCol).Value = ""
                                        Case Else
                                            ZielWs.Cells(zielRow, headerCol).Value = rohWert
                                    End Select
                                End If
                            Next headerCol

                            ' Daten übertragen
                            ZielWs.Cells(zielRow, "A").Value = wsRohdaten.Cells(j, "B").Value ' Vorgangsnummer
                            ZielWs.Cells(zielRow, "B").Value = Kategorie
                            ZielWs.Cells(zielRow, "U").Value = Gestern
                            ZielWs.Cells(zielRow, "V").Value = Format(wsRohdaten.Cells(j, "F").Value, "dd.mm.")
                            ZielWs.Cells(zielRow, "W").Value = wsRohdaten.Cells(j, "G").Value
                            ZielWs.Cells(zielRow, "X").Value = MappingWert
                        End If
                    Next cell
                End If
            Next j
        End If
    Next i

    ' Externe Arbeitsmappe schließen
    wbZuweisungName.Close SaveChanges:=False

    Debug.Print "Datenübertragung abgeschlossen!"
    ForwardingImport
End Sub