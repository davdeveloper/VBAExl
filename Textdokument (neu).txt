Option Explicit

Sub ImportiereRohdatenFinal()
    Dim wbDash As Workbook
    Dim wbData As Workbook
    Dim wsZuweisung As Worksheet
    Dim wsZiel As Worksheet
    Dim wsData As Worksheet
    Dim wsKategorien As Worksheet
    Dim rngFound As Range
    
    Dim lLetzteZeileZuweisung As Long
    Dim lLetzteZeileData As Long
    Dim lLetzteZeileKatA As Long
    
    Dim i As Long, j As Long
    
    Dim rawKey As String
    Dim rawVorgang As String
    Dim rawHeader As String
    Dim rawValue As Variant
    Dim strZielblattName As String
    Dim lZielzeile As Long
    
    Dim dictHeaders As Object
    Dim dictStartZeilen As Object
    Dim dictKategorien As Object
    
    Dim upperHeader As String
    Dim zielSpalte As Long
    Dim englischerText As String
    Dim deutscherText As String
    
    Dim englVal As Variant
    Dim rawValL As Variant
    
    Set wbDash = ThisWorkbook
    Set wsZuweisung = wbDash.Worksheets("Zuweisung")
    Set wsKategorien = wbDash.Worksheets("Kategorien")
    
    ' Rohdaten öffnen (Pfad anpassen!)
    Set wbData = Workbooks.Open("C:\Pfad\zu\Leaptree_Data.xlsx")
    Set wsData = wbData.Worksheets(1)
    
    lLetzteZeileZuweisung = wsZuweisung.Cells(wsZuweisung.Rows.Count, 2).End(xlUp).Row
    lLetzteZeileData = wsData.Cells(wsData.Rows.Count, 1).End(xlUp).Row
    
    ' Dictionaries
    Set dictHeaders = CreateObject("Scripting.Dictionary")
    Set dictStartZeilen = CreateObject("Scripting.Dictionary")
    Set dictKategorien = CreateObject("Scripting.Dictionary")
    
    ' Kategorien einlesen (Englisch->Deutsch)
    lLetzteZeileKatA = wsKategorien.Cells(wsKategorien.Rows.Count, 1).End(xlUp).Row
    For i = 2 To lLetzteZeileKatA
        If Not IsEmpty(wsKategorien.Cells(i, 1)) Then
            englischerText = CStr(wsKategorien.Cells(i, 1).Value)
            deutscherText = CStr(wsKategorien.Cells(i, 2).Value)
            dictKategorien(englischerText) = deutscherText
        End If
    Next i
    
    For i = 2 To lLetzteZeileData
        rawKey = wsData.Cells(i, 1).Value      ' Rohdaten Spalte A
        rawVorgang = wsData.Cells(i, 2).Value  ' Rohdaten Spalte B
        rawHeader = wsData.Cells(i, 10).Value  ' Rohdaten Spalte J (Headername)
        
        ' Schlüssel in Zuweisung suchen
        Set rngFound = wsZuweisung.Columns(2).Find(What:=rawKey, LookAt:=xlWhole)
        If Not rngFound Is Nothing Then
            strZielblattName = rngFound.Offset(0, 1).Value
            
            On Error Resume Next
            Set wsZiel = wbDash.Worksheets(strZielblattName)
            On Error GoTo 0
            
            If wsZiel Is Nothing Then
                GoTo NächsterDatensatz
            End If
            
            ' Headers einlesen
            dictHeaders.RemoveAll
            For j = 3 To 17 ' C bis Q
                If Not IsEmpty(wsZiel.Cells(12, j)) Then
                    dictHeaders(UCase(CStr(wsZiel.Cells(12, j).Value))) = j
                End If
            Next j
            
            ' Einmalig pro Blatt Startzeile bestimmen
            Dim startZeile As Long
            If Not dictStartZeilen.Exists(strZielblattName) Then
                startZeile = FindeFreieStartzeile(wsZiel)
                dictStartZeilen(strZielblattName) = startZeile
            Else
                startZeile = dictStartZeilen(strZielblattName)
            End If
            
            ' Vorgangszeile suchen
            Set rngFound = wsZiel.Columns(1).Find(What:=rawVorgang, LookAt:=xlWhole)
            If rngFound Is Nothing Then
                ' Vorgang noch nicht vorhanden
                lZielzeile = startZeile
                
                ' Übersetzung der Spalte C (Englisch -> Deutsch)
                englVal = wsData.Cells(i, 3).Value
                If dictKategorien.Exists(CStr(englVal)) Then
                    wsZiel.Cells(lZielzeile, 2).Value = dictKategorien(CStr(englVal))
                Else
                    wsZiel.Cells(lZielzeile, 2).Value = englVal
                End If
                
                ' Vorgangsnummer in Spalte A
                wsZiel.Cells(lZielzeile, 1).Value = rawVorgang
                
                ' Datum aus Rohdaten Spalte D einlesen
                Dim rawDate As Date
                rawDate = wsData.Cells(i, 4).Value
                
                ' Spalte V (22) = Rohdaten Spalte D (4)
                wsZiel.Cells(lZielzeile, 22).Value = rawDate
                
                ' Spalte W (23) = Rohdaten Spalte E (5)
                wsZiel.Cells(lZielzeile, 23).Value = wsData.Cells(i, 5).Value
                
                ' Spalte U (21):
                ' Ausgehend von rawDate:
                ' Immer einen Tag zurück, außer wenn dieser Tag ein Sonntag ist, dann Freitag vorher
                If Weekday(rawDate - 1) = vbSunday Then
                    wsZiel.Cells(lZielzeile, 21).Value = rawDate - 3
                Else
                    wsZiel.Cells(lZielzeile, 21).Value = rawDate - 1
                End If
                
                ' Nächste freie Zeile für neuen Vorgang
                dictStartZeilen(strZielblattName) = startZeile + 1
            Else
                ' Vorgangsnummer existiert schon
                lZielzeile = rngFound.Row
            End If
            
            ' Header abhängige Werte (aus Spalte L)
            upperHeader = UCase(rawHeader)
            If dictHeaders.Exists(upperHeader) Then
                zielSpalte = dictHeaders(upperHeader)
                rawValL = wsData.Cells(i, 12).Value
                
                ' Werte konvertieren
                Select Case UCase(CStr(rawValL))
                    Case "JA"
                        rawValL = "j"
                    Case "NEIN"
                        rawValL = "n"
                    Case "N/A"
                        rawValL = ""   ' Leer lassen
                    Case "TEILWEISE"
                        rawValL = "t"
                End Select
                
                wsZiel.Cells(lZielzeile, zielSpalte).Value = rawValL
            End If
            
        End If
NächsterDatensatz:
        Set wsZiel = Nothing
    Next i
    
    wbData.Close False
    MsgBox "Import abgeschlossen!"
End Sub

Function FindeFreieStartzeile(ws As Worksheet) As Long
    Dim lCheckRow As Long
    lCheckRow = 16
    Do While ws.Cells(lCheckRow, 1).Value <> ""
        lCheckRow = lCheckRow + 30
    Loop
    FindeFreieStartzeile = lCheckRow
End Function