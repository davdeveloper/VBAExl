Sub ImportUndTransformierenRohdaten()
    Dim wsRohdaten As Worksheet
    Dim letzteZeile As Long, letzteSpalte As Long
    Dim dict As Object
    Dim key As Variant ' Muss Variant sein für For Each
    Dim vorgangsnummer As Variant, datum As Variant
    Dim i As Long, j As Long, neueSpalte As Long
    Dim frage As Variant, antwort As String
    Dim datenDatei As Variant
    Dim wbQuelle As Workbook
    Dim dataArray As Variant

    ' Datei-Auswahldialog
    datenDatei = Application.GetOpenFilename("Excel Dateien (*.xls; *.xlsx), *.xls; *.xlsx", , "Wählen Sie die Rohdaten-Datei aus")

    If datenDatei = False Then
        MsgBox "Es wurde keine Datei ausgewählt.", vbExclamation
        Exit Sub
    End If

    ' Rohdaten-Datei öffnen
    Set wbQuelle = Workbooks.Open(datenDatei)

    ' Setze das Arbeitsblatt für Rohdaten
    Set wsRohdaten = ThisWorkbook.Sheets("Rohdaten")

    ' Lösche alle existierenden Daten im Arbeitsblatt Rohdaten
    wsRohdaten.Cells.Clear

    ' Letzte Zeile und Spalte in der Quelldatei finden
    With wbQuelle.Sheets(1)
        letzteZeile = .Cells(.Rows.Count, 1).End(xlUp).Row
        letzteSpalte = .Cells(1, .Columns.Count).End(xlToLeft).Column
    End With

    ' Daten in ein Array laden
    dataArray = wbQuelle.Sheets(1).Cells(1, 1).Resize(letzteZeile, letzteSpalte).Value

    ' Quelldatei schließen
    wbQuelle.Close SaveChanges:=False

    ' Dictionary zur Zusammenführung der Daten
    Set dict = CreateObject("Scripting.Dictionary")

    ' Rohdaten verarbeiten und in das Dictionary schreiben
    For i = 2 To UBound(dataArray, 1) ' Überspringe Kopfzeile
        vorgangsnummer = dataArray(i, 2)
        datum = dataArray(i, 4)
        frage = dataArray(i, 10)
        antwort = dataArray(i, 12)

        ' Schlüssel erstellen aus Vorgangsnummer und Datum
        key = vorgangsnummer & "|" & datum

        ' Wenn der Schlüssel noch nicht im Dictionary ist, hinzufügen
        If Not dict.exists(key) Then
            dict(key) = Array(Application.Index(dataArray, i, 0), CreateObject("Scripting.Dictionary"))
        End If

        ' Frage und Antwort hinzufügen, auch wenn leer
        If Not IsEmpty(frage) Then
            dict(key)(1)(frage) = IIf(IsEmpty(antwort), "", antwort)
        End If
    Next i

    ' Daten im Arbeitsblatt Rohdaten transformieren
    Dim outputArray() As Variant
    Dim headerArray() As Variant
    Dim headerIndex As Object

    Set headerIndex = CreateObject("Scripting.Dictionary")

    ' Kopfzeile initialisieren
    ReDim headerArray(1 To letzteSpalte)
    For i = 1 To letzteSpalte
        headerArray(i) = dataArray(1, i)
    Next i

    ReDim outputArray(1 To dict.Count + 1, 1 To letzteSpalte)

    ' Kopfzeile kopieren
    For i = LBound(headerArray) To UBound(headerArray)
        outputArray(1, i) = headerArray(i)
        headerIndex(headerArray(i)) = i
    Next i

    ' Daten zusammenführen
    j = 2
    For Each key In dict.keys
        Dim rowData As Variant
        Dim extraData As Object
        rowData = dict(key)(0)
        extraData = dict(key)(1)

        ' Füge Basisdaten ein
        For i = LBound(rowData, 1) To UBound(rowData, 1)
            outputArray(j, i) = rowData(i)
        Next i

        ' Füge Fragen und Antworten ein
        For Each frage In extraData.keys
            If Not headerIndex.exists("Frage: " & frage) Then
                letzteSpalte = letzteSpalte + 1
                headerIndex("Frage: " & frage) = letzteSpalte
                ReDim Preserve outputArray(1 To UBound(outputArray, 1), 1 To letzteSpalte)
                outputArray(1, letzteSpalte) = "Frage: " & frage
            End If
            outputArray(j, headerIndex("Frage: " & frage)) = extraData(frage)
        Next frage

        j = j + 1
    Next key

    ' Schreibe die Daten zurück in das Arbeitsblatt
    wsRohdaten.Cells(1, 1).Resize(UBound(outputArray, 1), UBound(outputArray, 2)).Value = outputArray

    MsgBox "Die Rohdaten wurden erfolgreich importiert und transformiert!", vbInformation

End Sub
